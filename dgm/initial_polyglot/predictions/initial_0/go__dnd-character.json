{
    "instance_id": "go__dnd-character",
    "model_name_or_path": "20250510_021328--claude-3-5-sonnet-20241022_0",
    "model_patch": "diff --git a/dnd_character.go b/dnd_character.go\nindex 5c048c3..35d521c 100644\n--- a/dnd_character.go\n+++ b/dnd_character.go\n@@ -1,5 +1,16 @@\n package dndcharacter\n \n+import (\n+\t\"math\"\n+\t\"math/rand\"\n+\t\"time\"\n+)\n+\n+// Character represents a D&D character with ability scores and hitpoints\n+// Each ability score is generated by rolling four dice, discarding the lowest one\n+// and summing the rest. Hitpoints are determined based on constitution.\n+// See the problem description for details.\n+\n type Character struct {\n \tStrength     int\n \tDexterity    int\n@@ -11,16 +22,56 @@ type Character struct {\n }\n \n // Modifier calculates the ability modifier for a given ability score\n+// The modifier is calculated as floor((score - 10) / 2).\n func Modifier(score int) int {\n-\tpanic(\"Please implement the Modifier() function\")\n+\treturn int(math.Floor(float64(score-10) / 2.0))\n }\n \n // Ability uses randomness to generate the score for an ability\n+// Roll four 6-sided dice, discard the smallest roll, and sum the remaining three.\n func Ability() int {\n-\tpanic(\"Please implement the Ability() function\")\n+\tdieRoll := func() int { return rand.Intn(6) + 1 }\n+\n+\td1, d2, d3, d4 := dieRoll(), dieRoll(), dieRoll(), dieRoll()\n+\ttotal := d1 + d2 + d3 + d4\n+\n+\t// find the smallest die\n+\tmin := d1\n+\tif d2 < min {\n+\t\tmin = d2\n+\t}\n+\tif d3 < min {\n+\t\tmin = d3\n+\t}\n+\tif d4 < min {\n+\t\tmin = d4\n+\t}\n+\n+\treturn total - min\n }\n \n // GenerateCharacter creates a new Character with random scores for abilities\n+// Hitpoints are calculated as 10 + constitution modifier.\n func GenerateCharacter() Character {\n-\tpanic(\"Please implement the GenerateCharacter() function\")\n+\t// Seed the random number generator\n+\trand.Seed(time.Now().UnixNano())\n+\n+\tstr := Ability()\n+\tdex := Ability()\n+\tcon := Ability()\n+\tintell := Ability()\n+\twis := Ability()\n+\tcha := Ability()\n+\n+\thp := 10 + Modifier(con)\n+\n+\treturn Character{\n+\t\tStrength:     str,\n+\t\tDexterity:    dex,\n+\t\tConstitution: con,\n+\t\tIntelligence: intell,\n+\t\tWisdom:       wis,\n+\t\tCharisma:     cha,\n+\t\tHitpoints:    hp,\n+\t}\n }\n",
    "proposed_model_patches": [],
    "eval_result": "resolved",
    "success": true
}