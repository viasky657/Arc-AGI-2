{
    "instance_id": "java__bank-account",
    "model_name_or_path": "20250510_021328--claude-3-5-sonnet-20241022_0",
    "model_patch": "diff --git a/src/main/java/BankAccount.java b/src/main/java/BankAccount.java\nindex 0538b36..0470c86 100644\n--- a/src/main/java/BankAccount.java\n+++ b/src/main/java/BankAccount.java\n@@ -1,23 +1,51 @@\n-class BankAccount {\n+public class BankAccount {\n \n-    void open() throws BankAccountActionInvalidException {\n-        throw new UnsupportedOperationException(\"Delete this statement and write your own implementation.\");\n+    private boolean open = false;\n+    private int balance = 0;\n+\n+    public synchronized void open() throws BankAccountActionInvalidException {\n+        if (open) {\n+            throw new BankAccountActionInvalidException(\"Account already open\");\n+        }\n+        open = true;\n+        balance = 0;\n     }\n \n-    void close() throws BankAccountActionInvalidException {\n-        throw new UnsupportedOperationException(\"Delete this statement and write your own implementation.\");\n+    public synchronized void close() throws BankAccountActionInvalidException {\n+        if (!open) {\n+            throw new BankAccountActionInvalidException(\"Account already closed\");\n+        }\n+        open = false;\n     }\n \n-    synchronized int getBalance() throws BankAccountActionInvalidException {\n-        throw new UnsupportedOperationException(\"Delete this statement and write your own implementation.\");\n+    public synchronized int getBalance() throws BankAccountActionInvalidException {\n+        if (!open) {\n+            throw new BankAccountActionInvalidException(\"Account closed\");\n+        }\n+        return balance;\n     }\n \n-    synchronized void deposit(int amount) throws BankAccountActionInvalidException {\n-        throw new UnsupportedOperationException(\"Delete this statement and write your own implementation.\");\n+    public synchronized void deposit(int amount) throws BankAccountActionInvalidException {\n+        if (!open) {\n+            throw new BankAccountActionInvalidException(\"Account closed\");\n+        }\n+        if (amount < 0) {\n+            throw new BankAccountActionInvalidException(\"Cannot deposit negative amounts\");\n+        }\n+        balance += amount;\n     }\n \n-    synchronized void withdraw(int amount) throws BankAccountActionInvalidException {\n-        throw new UnsupportedOperationException(\"Delete this statement and write your own implementation.\");\n+    public synchronized void withdraw(int amount) throws BankAccountActionInvalidException {\n+        if (!open) {\n+            throw new BankAccountActionInvalidException(\"Account closed\");\n+        }\n+        if (amount < 0) {\n+            throw new BankAccountActionInvalidException(\"Cannot withdraw negative amounts\");\n+        }\n+        if (balance < amount) {\n+            throw new BankAccountActionInvalidException(\"Insufficient funds\");\n+        }\n+        balance -= amount;\n     }\n \n-}\n\\ No newline at end of file\n+}\ndiff --git a/src/main/java/BankAccountActionInvalidException.java b/src/main/java/BankAccountActionInvalidException.java\nnew file mode 100644\nindex 0000000..7cf4369\n--- /dev/null\n+++ b/src/main/java/BankAccountActionInvalidException.java\n@@ -0,0 +1,5 @@\n+public class BankAccountActionInvalidException extends Exception {\n+    public BankAccountActionInvalidException(String message) {\n+        super(message);\n+    }\n+}\n",
    "proposed_model_patches": [],
    "eval_result": "unresolved",
    "success": true
}