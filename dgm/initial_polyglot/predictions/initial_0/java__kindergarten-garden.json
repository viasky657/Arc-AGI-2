{
    "instance_id": "java__kindergarten-garden",
    "model_name_or_path": "20250510_021328--claude-3-5-sonnet-20241022_0",
    "model_patch": "diff --git a/src/main/java/KindergartenGarden.java b/src/main/java/KindergartenGarden.java\nindex 1659122..aeab3d4 100644\n--- a/src/main/java/KindergartenGarden.java\n+++ b/src/main/java/KindergartenGarden.java\n@@ -1,13 +1,45 @@\n import java.util.List;\n+import java.util.Map;\n+import java.util.HashMap;\n+import java.util.ArrayList;\n \n class KindergartenGarden {\n \n+    private Map<String, List<Plant>> studentPlants;\n+    private static final String[] STUDENTS = {\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\", \"Fred\", \"Ginny\", \"Harriet\", \"Ileana\", \"Joseph\", \"Kincaid\", \"Larry\"};\n+\n     KindergartenGarden(String garden) {\n-        throw new UnsupportedOperationException(\"Delete this statement and write your own implementation.\");\n+        String[] rows = garden.split(\"\\n\");\n+        if (rows.length != 2) {\n+            throw new IllegalArgumentException(\"Garden must have exactly 2 rows\");\n+        }\n+        String row1 = rows[0];\n+        String row2 = rows[1];\n+        if (row1.length() != STUDENTS.length * 2 || row2.length() != STUDENTS.length * 2) {\n+            throw new IllegalArgumentException(\"Each row must contain exactly \" + (STUDENTS.length * 2) + \" cups\");\n+        }\n+        studentPlants = new HashMap<>();\n+        for (int i = 0; i < STUDENTS.length; i++) {\n+            int startIndex = i * 2;\n+            int endIndex = startIndex + 2;\n+            List<Plant> plants = new ArrayList<>();\n+            // First row cups\n+            for (int j = startIndex; j < endIndex; j++) {\n+                plants.add(Plant.fromChar(row1.charAt(j)));\n+            }\n+            // Second row cups\n+            for (int j = startIndex; j < endIndex; j++) {\n+                plants.add(Plant.fromChar(row2.charAt(j)));\n+            }\n+            studentPlants.put(STUDENTS[i], plants);\n+        }\n     }\n \n     List<Plant> getPlantsOfStudent(String student) {\n-        throw new UnsupportedOperationException(\"Delete this statement and write your own implementation.\");\n+        if (!studentPlants.containsKey(student)) {\n+            throw new IllegalArgumentException(\"Student not found: \" + student);\n+        }\n+        return studentPlants.get(student);\n     }\n \n }\ndiff --git a/src/main/java/Plant.java b/src/main/java/Plant.java\nnew file mode 100644\nindex 0000000..9a7ca5e\n--- /dev/null\n+++ b/src/main/java/Plant.java\n@@ -0,0 +1,13 @@\n+public enum Plant {\n+    GRASS, CLOVER, RADISH, VIOLET;\n+    \n+    public static Plant fromChar(char c) {\n+        switch (c) {\n+            case 'G': return GRASS;\n+            case 'C': return CLOVER;\n+            case 'R': return RADISH;\n+            case 'V': return VIOLET;\n+            default: throw new IllegalArgumentException(\"Invalid plant code: \" + c);\n+        }\n+    }\n+}\n",
    "proposed_model_patches": [],
    "eval_result": "unresolved",
    "success": true
}