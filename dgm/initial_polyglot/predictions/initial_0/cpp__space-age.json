{
    "instance_id": "cpp__space-age",
    "model_name_or_path": "20250510_021328--claude-3-5-sonnet-20241022_0",
    "model_patch": "diff --git a/space_age.cpp b/space_age.cpp\nindex 9a20f18..d72717b 100644\n--- a/space_age.cpp\n+++ b/space_age.cpp\n@@ -2,4 +2,44 @@\n \n namespace space_age {\n \n+SpaceAge::SpaceAge(long long seconds) : _seconds(seconds) {}\n+\n+long long SpaceAge::seconds() const {\n+    return _seconds;\n+}\n+\n+// Each method returns age in years for the specific planet\n+\n+double SpaceAge::on_earth() const {\n+    return _seconds / earth_seconds;\n+}\n+\n+double SpaceAge::on_mercury() const {\n+    return _seconds / (earth_seconds * 0.2408467);\n+}\n+\n+double SpaceAge::on_venus() const {\n+    return _seconds / (earth_seconds * 0.61519726);\n+}\n+\n+double SpaceAge::on_mars() const {\n+    return _seconds / (earth_seconds * 1.8808158);\n+}\n+\n+double SpaceAge::on_jupiter() const {\n+    return _seconds / (earth_seconds * 11.862615);\n+}\n+\n+double SpaceAge::on_saturn() const {\n+    return _seconds / (earth_seconds * 29.447498);\n+}\n+\n+double SpaceAge::on_uranus() const {\n+    return _seconds / (earth_seconds * 84.016846);\n+}\n+\n+double SpaceAge::on_neptune() const {\n+    return _seconds / (earth_seconds * 164.79132);\n+}\n+\n }  // namespace space_age\ndiff --git a/space_age.h b/space_age.h\nindex 5c239c6..507c63b 100644\n--- a/space_age.h\n+++ b/space_age.h\n@@ -1,8 +1,28 @@\n-#if !defined(SPACE_AGE_H)\n+#ifndef SPACE_AGE_H\n #define SPACE_AGE_H\n \n namespace space_age {\n \n+class SpaceAge {\n+public:\n+    explicit SpaceAge(long long seconds);\n+    long long seconds() const;\n+\n+    double on_mercury() const;\n+    double on_venus() const;\n+    double on_earth() const;\n+    double on_mars() const;\n+    double on_jupiter() const;\n+    double on_saturn() const;\n+    double on_uranus() const;\n+    double on_neptune() const;\n+\n+private:\n+    long long _seconds;\n+    // Number of seconds in one Earth year\n+    static constexpr double earth_seconds = 31557600.0;\n+};\n+\n }  // namespace space_age\n \n-#endif // SPACE_AGE_H\n\\ No newline at end of file\n+#endif // SPACE_AGE_H\n",
    "proposed_model_patches": [],
    "eval_result": "unresolved",
    "success": true
}