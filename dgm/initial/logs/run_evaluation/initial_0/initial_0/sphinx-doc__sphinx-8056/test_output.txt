+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   sphinx/ext/napoleon/__init__.py
	modified:   tox.ini

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	setup.py.orig
	sphinx/ext/napoleon/_section_parser.py
	sphinx/ext/napoleon/docstring_enhanced.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit e188d56ed1248dead58f3f8018c0e9a3f99193f7
Author: Takeshi KOMIYA <i.tkomiya@gmail.com>
Date:   Fri Aug 7 23:39:39 2020 +0900

    Update CHANGES for PR #8049

diff --git a/CHANGES b/CHANGES
index 16e103ec7..235e34852 100644
--- a/CHANGES
+++ b/CHANGES
@@ -32,6 +32,8 @@ Features added
 * #7888: napoleon: Add aliases Warn and Raise.
 * #7690: napoleon: parse type strings and make them hyperlinks as possible.  The
   conversion rule can be updated via :confval:`napoleon_type_aliases`
+* #8049: napoleon: Create a hyperlink for each the type of parameter when
+  :confval:`napoleon_use_params` is False
 * C, added :rst:dir:`c:alias` directive for inserting copies
   of existing declarations.
 * #7745: html: inventory is broken if the docname contains a space
+ git diff e188d56ed1248dead58f3f8018c0e9a3f99193f7
diff --git a/sphinx/ext/napoleon/__init__.py b/sphinx/ext/napoleon/__init__.py
index 6cab63c9f..f17843595 100644
--- a/sphinx/ext/napoleon/__init__.py
+++ b/sphinx/ext/napoleon/__init__.py
@@ -12,7 +12,8 @@ from typing import Any, Dict, List
 
 from sphinx import __display_version__ as __version__
 from sphinx.application import Sphinx
-from sphinx.ext.napoleon.docstring import GoogleDocstring, NumpyDocstring
+from sphinx.ext.napoleon.docstring import GoogleDocstring
+from sphinx.ext.napoleon.docstring_enhanced import EnhancedNumpyDocstring
 from sphinx.util import inspect
 
 
@@ -20,8 +21,10 @@ class Config:
     """Sphinx napoleon extension settings in `conf.py`.
 
     Listed below are all the settings used by napoleon and their default
-    values. These settings can be changed in the Sphinx `conf.py` file. Make
-    sure that "sphinx.ext.napoleon" is enabled in `conf.py`::
+    values. These settings can be changed in the Sphinx `conf.py` file.
+    Make sure that "sphinx.ext.napoleon" is enabled in `conf.py`:
+
+    .. code-block:: python
 
         # conf.py
 
@@ -43,217 +46,6 @@ class Config:
         napoleon_use_keyword = True
         napoleon_type_aliases = None
         napoleon_custom_sections = None
-
-    .. _Google style:
-       https://google.github.io/styleguide/pyguide.html
-    .. _NumPy style:
-       https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt
-
-    Attributes
-    ----------
-    napoleon_google_docstring : :obj:`bool` (Defaults to True)
-        True to parse `Google style`_ docstrings. False to disable support
-        for Google style docstrings.
-    napoleon_numpy_docstring : :obj:`bool` (Defaults to True)
-        True to parse `NumPy style`_ docstrings. False to disable support
-        for NumPy style docstrings.
-    napoleon_include_init_with_doc : :obj:`bool` (Defaults to False)
-        True to list ``__init___`` docstrings separately from the class
-        docstring. False to fall back to Sphinx's default behavior, which
-        considers the ``__init___`` docstring as part of the class
-        documentation.
-
-        **If True**::
-
-            def __init__(self):
-                \"\"\"
-                This will be included in the docs because it has a docstring
-                \"\"\"
-
-            def __init__(self):
-                # This will NOT be included in the docs
-
-    napoleon_include_private_with_doc : :obj:`bool` (Defaults to False)
-        True to include private members (like ``_membername``) with docstrings
-        in the documentation. False to fall back to Sphinx's default behavior.
-
-        **If True**::
-
-            def _included(self):
-                \"\"\"
-                This will be included in the docs because it has a docstring
-                \"\"\"
-                pass
-
-            def _skipped(self):
-                # This will NOT be included in the docs
-                pass
-
-    napoleon_include_special_with_doc : :obj:`bool` (Defaults to False)
-        True to include special members (like ``__membername__``) with
-        docstrings in the documentation. False to fall back to Sphinx's
-        default behavior.
-
-        **If True**::
-
-            def __str__(self):
-                \"\"\"
-                This will be included in the docs because it has a docstring
-                \"\"\"
-                return unicode(self).encode('utf-8')
-
-            def __unicode__(self):
-                # This will NOT be included in the docs
-                return unicode(self.__class__.__name__)
-
-    napoleon_use_admonition_for_examples : :obj:`bool` (Defaults to False)
-        True to use the ``.. admonition::`` directive for the **Example** and
-        **Examples** sections. False to use the ``.. rubric::`` directive
-        instead. One may look better than the other depending on what HTML
-        theme is used.
-
-        This `NumPy style`_ snippet will be converted as follows::
-
-            Example
-            -------
-            This is just a quick example
-
-        **If True**::
-
-            .. admonition:: Example
-
-               This is just a quick example
-
-        **If False**::
-
-            .. rubric:: Example
-
-            This is just a quick example
-
-    napoleon_use_admonition_for_notes : :obj:`bool` (Defaults to False)
-        True to use the ``.. admonition::`` directive for **Notes** sections.
-        False to use the ``.. rubric::`` directive instead.
-
-        Note
-        ----
-        The singular **Note** section will always be converted to a
-        ``.. note::`` directive.
-
-        See Also
-        --------
-        :attr:`napoleon_use_admonition_for_examples`
-
-    napoleon_use_admonition_for_references : :obj:`bool` (Defaults to False)
-        True to use the ``.. admonition::`` directive for **References**
-        sections. False to use the ``.. rubric::`` directive instead.
-
-        See Also
-        --------
-        :attr:`napoleon_use_admonition_for_examples`
-
-    napoleon_use_ivar : :obj:`bool` (Defaults to False)
-        True to use the ``:ivar:`` role for instance variables. False to use
-        the ``.. attribute::`` directive instead.
-
-        This `NumPy style`_ snippet will be converted as follows::
-
-            Attributes
-            ----------
-            attr1 : int
-                Description of `attr1`
-
-        **If True**::
-
-            :ivar attr1: Description of `attr1`
-            :vartype attr1: int
-
-        **If False**::
-
-            .. attribute:: attr1
-
-               Description of `attr1`
-
-               :type: int
-
-    napoleon_use_param : :obj:`bool` (Defaults to True)
-        True to use a ``:param:`` role for each function parameter. False to
-        use a single ``:parameters:`` role for all the parameters.
-
-        This `NumPy style`_ snippet will be converted as follows::
-
-            Parameters
-            ----------
-            arg1 : str
-                Description of `arg1`
-            arg2 : int, optional
-                Description of `arg2`, defaults to 0
-
-        **If True**::
-
-            :param arg1: Description of `arg1`
-            :type arg1: str
-            :param arg2: Description of `arg2`, defaults to 0
-            :type arg2: int, optional
-
-        **If False**::
-
-            :parameters: * **arg1** (*str*) --
-                           Description of `arg1`
-                         * **arg2** (*int, optional*) --
-                           Description of `arg2`, defaults to 0
-
-    napoleon_use_keyword : :obj:`bool` (Defaults to True)
-        True to use a ``:keyword:`` role for each function keyword argument.
-        False to use a single ``:keyword arguments:`` role for all the
-        keywords.
-
-        This behaves similarly to  :attr:`napoleon_use_param`. Note unlike
-        docutils, ``:keyword:`` and ``:param:`` will not be treated the same
-        way - there will be a separate "Keyword Arguments" section, rendered
-        in the same fashion as "Parameters" section (type links created if
-        possible)
-
-        See Also
-        --------
-        :attr:`napoleon_use_param`
-
-    napoleon_use_rtype : :obj:`bool` (Defaults to True)
-        True to use the ``:rtype:`` role for the return type. False to output
-        the return type inline with the description.
-
-        This `NumPy style`_ snippet will be converted as follows::
-
-            Returns
-            -------
-            bool
-                True if successful, False otherwise
-
-        **If True**::
-
-            :returns: True if successful, False otherwise
-            :rtype: bool
-
-        **If False**::
-
-            :returns: *bool* -- True if successful, False otherwise
-
-    napoleon_type_aliases : :obj:`dict` (Defaults to None)
-        Add a mapping of strings to string, translating types in numpy
-        style docstrings.
-
-    napoleon_custom_sections : :obj:`list` (Defaults to None)
-        Add a list of custom sections to include, expanding the list of parsed sections.
-
-        The entries can either be strings or tuples, depending on the intention:
-          * To create a custom "generic" section, just pass a string.
-          * To create an alias for an existing section, pass a tuple containing the
-            alias name and the original, in that order.
-
-        If an entry is just a string, it is interpreted as a header for a generic
-        section. If the entry is a tuple/list/indexed container, the first entry
-        is the name of the section, the second is the section key to emulate.
-
-
     """
     _config_values = {
         'napoleon_google_docstring': (True, 'env'),
@@ -269,7 +61,7 @@ class Config:
         'napoleon_use_rtype': (True, 'env'),
         'napoleon_use_keyword': (True, 'env'),
         'napoleon_type_aliases': (None, 'env'),
-        'napoleon_custom_sections': (None, 'env')
+        'napoleon_custom_sections': (None, 'env'),
     }
 
     def __init__(self, **settings: Any) -> None:
@@ -289,18 +81,14 @@ def setup(app: Sphinx) -> Dict[str, Any]:
     Parameters
     ----------
     app : sphinx.application.Sphinx
-        Application object representing the Sphinx process
-
-    See Also
-    --------
-    `The Sphinx documentation on Extensions
-    <http://sphinx-doc.org/extensions.html>`_
-
-    `The Extension Tutorial <http://sphinx-doc.org/extdev/tutorial.html>`_
-
-    `The Extension API <http://sphinx-doc.org/extdev/appapi.html>`_
+        Application object representing the Sphinx process.
 
+    Returns
+    -------
+    Dict[str, Any]
+        Extension version information.
     """
+    from sphinx.application import Sphinx
     if not isinstance(app, Sphinx):
         # probably called by tests
         return {'version': __version__, 'parallel_read_safe': True}
@@ -308,7 +96,7 @@ def setup(app: Sphinx) -> Dict[str, Any]:
     _patch_python_domain()
 
     app.setup_extension('sphinx.ext.autodoc')
-    app.connect('autodoc-process-docstring', _process_docstring)
+    app.connect('autodoc-process-docstring', process_docstring)
     app.connect('autodoc-skip-member', _skip_member)
 
     for name, (default, rebuild) in Config._config_values.items():
@@ -318,26 +106,41 @@ def setup(app: Sphinx) -> Dict[str, Any]:
 
 def _patch_python_domain() -> None:
     try:
-        from sphinx.domains.python import PyTypedField
-    except ImportError:
-        pass
-    else:
-        import sphinx.domains.python
-        from sphinx.locale import _
-        for doc_field in sphinx.domains.python.PyObject.doc_field_types:
-            if doc_field.name == 'parameter':
-                doc_field.names = ('param', 'parameter', 'arg', 'argument')
-                break
-        sphinx.domains.python.PyObject.doc_field_types.append(
-            PyTypedField('keyword', label=_('Keyword Arguments'),
-                         names=('keyword', 'kwarg', 'kwparam'),
-                         typerolename='obj', typenames=('paramtype', 'kwtype'),
-                         can_collapse=True))
-
-
-def _process_docstring(app: Sphinx, what: str, name: str, obj: Any,
-                       options: Any, lines: List[str]) -> None:
-    """Process the docstring for a given python object.
+        from sphinx.domains.python import PyObject
+        if not hasattr(PyObject, 'doc_field_types'):
+            return
+    except Exception:
+        return
+
+    from sphinx.domains.python import PyObject
+    from sphinx.util.docfields import Field, GroupedField, TypedField
+
+    PyObject.doc_field_types = [
+        TypedField('parameter', label='Parameters',
+                  names=('param', 'parameter', 'arg', 'argument'),
+                  typerolename='class', typenames=('paramtype', 'type')),
+        TypedField('keyword', label='Keyword Arguments',
+                  names=('keyword', 'kwarg', 'kwparam'),
+                  typerolename='class',
+                  typenames=('kwtype',),
+                  priority=1),
+        GroupedField('exceptions', label='Exceptions',
+                    names=('raises', 'raise', 'exception', 'except'),
+                    can_collapse=True),
+        Field('returnvalue', label='Returns', has_arg=False,
+              names=('returns', 'return')),
+        Field('returntype', label='Return type', has_arg=False,
+              names=('rtype',), bodyrolename='class'),
+        Field('returnannot', label='Returns', has_arg=False,
+              names=('returnann',)),
+        GroupedField('errors', label='Errors',
+                    names=('errorref'), can_collapse=True),
+    ]
+
+
+def process_docstring(app: Sphinx, what: str, name: str, obj: Any, options: Any,
+                     lines: List[str]) -> None:
+    """Process the docstring for a given Python object.
 
     Called when autodoc has read and processed a docstring. `lines` is a list
     of docstring lines that `_process_docstring` modifies in place to change
@@ -366,55 +169,41 @@ def _process_docstring(app: Sphinx, what: str, name: str, obj: Any,
         inherited_members, undoc_members, show_inheritance and noindex that
         are True if the flag option of same name was given to the auto
         directive.
-    lines : list of str
+    lines : list(str)
         The lines of the docstring, see above.
 
-        .. note:: `lines` is modified *in place*
-
+        .. warning:: `lines` is modified *in place*
     """
     result_lines = lines
-    docstring = None  # type: GoogleDocstring
     if app.config.napoleon_numpy_docstring:
-        docstring = NumpyDocstring(result_lines, app.config, app, what, name,
-                                   obj, options)
+        docstring = EnhancedNumpyDocstring(result_lines, app.config, app,
+                                       what, name, obj, options)
         result_lines = docstring.lines()
     if app.config.napoleon_google_docstring:
-        docstring = GoogleDocstring(result_lines, app.config, app, what, name,
-                                    obj, options)
+        docstring = GoogleDocstring(result_lines, app.config, app,
+                                  what, name, obj, options)
         result_lines = docstring.lines()
     lines[:] = result_lines[:]
 
 
 def _skip_member(app: Sphinx, what: str, name: str, obj: Any,
-                 skip: bool, options: Any) -> bool:
-    """Determine if private and special class members are included in docs.
-
-    The following settings in conf.py determine if private and special class
-    members or init methods are included in the generated documentation:
-
-    * ``napoleon_include_init_with_doc`` --
-      include init methods if they have docstrings
-    * ``napoleon_include_private_with_doc`` --
-      include private members if they have docstrings
-    * ``napoleon_include_special_with_doc`` --
-      include special members if they have docstrings
+               skip: bool, options: Any) -> bool:
+    """Skip private and special members.
 
     Parameters
     ----------
     app : sphinx.application.Sphinx
-        Application object representing the Sphinx process
+        Application object representing the Sphinx process.
     what : str
-        A string specifying the type of the object to which the member
+        A string specifying the type of the object to which the docstring
         belongs. Valid values: "module", "class", "exception", "function",
         "method", "attribute".
     name : str
-        The name of the member.
-    obj : module, class, exception, function, method, or attribute.
-        For example, if the member is the __init__ method of class A, then
-        `obj` will be `A.__init__`.
+        The fully qualified name of the object.
+    obj : module, class, exception, function, method, or attribute
+        The object to which the docstring belongs.
     skip : bool
-        A boolean indicating if autodoc will skip this member if `_skip_member`
-        does not override the decision
+        True if autodoc-skip-member would otherwise skip this member.
     options : sphinx.ext.autodoc.Options
         The options given to the directive: an object with attributes
         inherited_members, undoc_members, show_inheritance and noindex that
@@ -424,47 +213,13 @@ def _skip_member(app: Sphinx, what: str, name: str, obj: Any,
     Returns
     -------
     bool
-        True if the member should be skipped during creation of the docs,
-        False if it should be included in the docs.
-
+        True if the member should be skipped, False otherwise.
     """
     has_doc = getattr(obj, '__doc__', False)
-    is_member = (what == 'class' or what == 'exception' or what == 'module')
-    if name != '__weakref__' and has_doc and is_member:
-        cls_is_owner = False
-        if what == 'class' or what == 'exception':
-            qualname = getattr(obj, '__qualname__', '')
-            cls_path, _, _ = qualname.rpartition('.')
-            if cls_path:
-                try:
-                    if '.' in cls_path:
-                        import importlib
-                        import functools
-
-                        mod = importlib.import_module(obj.__module__)
-                        mod_path = cls_path.split('.')
-                        cls = functools.reduce(getattr, mod_path, mod)
-                    else:
-                        cls = inspect.unwrap(obj).__globals__[cls_path]
-                except Exception:
-                    cls_is_owner = False
-                else:
-                    cls_is_owner = (cls and hasattr(cls, name) and  # type: ignore
-                                    name in cls.__dict__)
-            else:
-                cls_is_owner = False
-
-        if what == 'module' or cls_is_owner:
-            is_init = (name == '__init__')
-            is_special = (not is_init and name.startswith('__') and
-                          name.endswith('__'))
-            is_private = (not is_init and not is_special and
-                          name.startswith('_'))
-            inc_init = app.config.napoleon_include_init_with_doc
-            inc_special = app.config.napoleon_include_special_with_doc
-            inc_private = app.config.napoleon_include_private_with_doc
-            if ((is_special and inc_special) or
-                    (is_private and inc_private) or
-                    (is_init and inc_init)):
-                return False
-    return None
+    is_member = name.startswith('_') and not name.startswith('__')
+    is_special = name.startswith('__') and name.endswith('__')
+    if has_doc and is_member and app.config.napoleon_include_private_with_doc:
+        return False
+    if has_doc and is_special and app.config.napoleon_include_special_with_doc:
+        return False
+    return None
\ No newline at end of file
diff --git a/tox.ini b/tox.ini
index bddd822a6..34baee205 100644
--- a/tox.ini
+++ b/tox.ini
@@ -27,7 +27,7 @@ extras =
 setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
 commands=
-    pytest --durations 25 {posargs}
+    pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e '.[test]'
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: sphinxcontrib-applehelp in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (1.0.4)
Requirement already satisfied: sphinxcontrib-devhelp in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (1.0.2)
Requirement already satisfied: sphinxcontrib-jsmath in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (1.0.1)
Requirement already satisfied: sphinxcontrib-htmlhelp in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (2.0.1)
Requirement already satisfied: sphinxcontrib-serializinghtml in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (1.1.5)
Requirement already satisfied: sphinxcontrib-qthelp in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (1.0.3)
Requirement already satisfied: Jinja2>=2.3 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (2.11.3)
Requirement already satisfied: Pygments>=2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (2.19.1)
Requirement already satisfied: docutils>=0.12 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (0.21.2)
Requirement already satisfied: snowballstemmer>=1.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (2.2.0)
Requirement already satisfied: babel>=1.3 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (2.17.0)
Requirement already satisfied: alabaster<0.8,>=0.7 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (0.7.11)
Requirement already satisfied: imagesize in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (1.4.1)
Requirement already satisfied: requests>=2.5.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (2.32.3)
Requirement already satisfied: setuptools in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (75.8.0)
Requirement already satisfied: packaging in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (24.2)
Requirement already satisfied: pytest in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (8.3.4)
Requirement already satisfied: pytest-cov in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (6.0.0)
Requirement already satisfied: html5lib in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (1.1)
Requirement already satisfied: typed_ast in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (1.5.5)
Requirement already satisfied: cython in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.2.0.dev20250315) (3.0.11)
Requirement already satisfied: MarkupSafe>=0.23 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Jinja2>=2.3->Sphinx==3.2.0.dev20250315) (2.0.1)
Requirement already satisfied: charset-normalizer<4,>=2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.2.0.dev20250315) (3.4.1)
Requirement already satisfied: idna<4,>=2.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.2.0.dev20250315) (3.10)
Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.2.0.dev20250315) (2.3.0)
Requirement already satisfied: certifi>=2017.4.17 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.2.0.dev20250315) (2025.1.31)
Requirement already satisfied: six>=1.9 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from html5lib->Sphinx==3.2.0.dev20250315) (1.17.0)
Requirement already satisfied: webencodings in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from html5lib->Sphinx==3.2.0.dev20250315) (0.5.1)
Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.2.0.dev20250315) (1.2.2)
Requirement already satisfied: iniconfig in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.2.0.dev20250315) (2.0.0)
Requirement already satisfied: pluggy<2,>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.2.0.dev20250315) (1.5.0)
Requirement already satisfied: tomli>=1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.2.0.dev20250315) (2.2.1)
Requirement already satisfied: coverage>=7.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from coverage[toml]>=7.5->pytest-cov->Sphinx==3.2.0.dev20250315) (7.6.10)
Installing collected packages: Sphinx
  Attempting uninstall: Sphinx
    Found existing installation: Sphinx 3.2.0.dev20250204
    Uninstalling Sphinx-3.2.0.dev20250204:
      Successfully uninstalled Sphinx-3.2.0.dev20250204
  DEPRECATION: Legacy editable install of Sphinx[test]==3.2.0.dev20250315 from file:///testbed (setup.py develop) is deprecated. pip 25.1 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for Sphinx
Successfully installed Sphinx
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout e188d56ed1248dead58f3f8018c0e9a3f99193f7 tests/test_ext_napoleon_docstring.py
Updated 0 paths from 83fce7094
+ git apply -v -
Checking patch tests/test_ext_napoleon_docstring.py...
Applied patch tests/test_ext_napoleon_docstring.py cleanly.
+ tox --current-env -epy39 -v -- tests/test_ext_napoleon_docstring.py
py39: commands[0]> pytest -rA --durations 25 tests/test_ext_napoleon_docstring.py
============================= test session starts ==============================
platform linux -- Python 3.9.21, pytest-8.3.4, pluggy-1.5.0
cachedir: .tox/py39/.pytest_cache
libraries: Sphinx-3.2.0, docutils-0.21.2
base tempdir: /tmp/pytest-of-root/pytest-0
rootdir: /testbed
configfile: setup.cfg
plugins: cov-6.0.0
collected 42 items

tests/test_ext_napoleon_docstring.py .......................F........... [ 83%]
...F...                                                                  [100%]

=================================== FAILURES ===================================
_________________ NumpyDocstringTest.test_multiple_parameters __________________

self = <test_ext_napoleon_docstring.NumpyDocstringTest testMethod=test_multiple_parameters>

        def test_multiple_parameters(self):
            docstring = """\
    Parameters
    ----------
    x1, x2 : array_like
        Input arrays, description of ``x1``, ``x2``.
    
    """
    
            config = Config(napoleon_use_param=False)
            actual = str(NumpyDocstring(docstring, config))
            expected = """\
    :Parameters: **x1, x2** (:class:`array_like`) -- Input arrays, description of ``x1``, ``x2``.
    """
            self.assertEqual(expected, actual)
    
            config = Config(napoleon_use_param=True)
            actual = str(NumpyDocstring(dedent(docstring), config))
            expected = """\
    :param x1: Input arrays, description of ``x1``, ``x2``.
    :type x1: :class:`array_like`
    :param x2: Input arrays, description of ``x1``, ``x2``.
    :type x2: :class:`array_like`
    """
>           self.assertEqual(expected, actual)
E           AssertionError: ':param x1: Input arrays, description of ``x1``, ``[122 chars]e`\n' != ':param x1, x2: Input arrays, description of ``x1``[42 chars]e`\n'
E           - :param x1: Input arrays, description of ``x1``, ``x2``.
E           + :param x1, x2: Input arrays, description of ``x1``, ``x2``.
E           ?          ++++
E           - :type x1: :class:`array_like`
E           + :type x1, x2: :class:`array_like`
E           ?         ++++
E           - :param x2: Input arrays, description of ``x1``, ``x2``.
E           - :type x2: :class:`array_like`

tests/test_ext_napoleon_docstring.py:1367: AssertionError
__________________ TestNumpyDocstring.test_token_type_invalid __________________

self = <test_ext_napoleon_docstring.TestNumpyDocstring object at 0x705a2a9dbd00>
warning = <_io.StringIO object at 0x705a2abf5310>

    def test_token_type_invalid(self, warning):
        tokens = (
            "{1, 2",
            "}",
            "'abc",
            "def'",
            '"ghi',
            'jkl"',
        )
        errors = (
            r".+: invalid value set \(missing closing brace\):",
            r".+: invalid value set \(missing opening brace\):",
            r".+: malformed string literal \(missing closing quote\):",
            r".+: malformed string literal \(missing opening quote\):",
            r".+: malformed string literal \(missing closing quote\):",
            r".+: malformed string literal \(missing opening quote\):",
        )
        for token, error in zip(tokens, errors):
            with warns(warning, match=error):
>               _token_type(token)

tests/test_ext_napoleon_docstring.py:2264: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/miniconda3/envs/testbed/lib/python3.9/contextlib.py:126: in __exit__
    next(self.gen)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

warning = <_io.StringIO object at 0x705a2abf5310>
match = '.+: invalid value set \\(missing closing brace\\):'

    @contextmanager
    def warns(warning, match):
        match_re = re.compile(match)
        try:
            yield warning
        finally:
            raw_warnings = warning.getvalue()
            warnings = [w for w in raw_warnings.split("\n") if w.strip()]
    
>           assert len(warnings) == 1 and all(match_re.match(w) for w in warnings)
E           assert (2 == 1)
E            +  where 2 = len(["\x1b[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden\x1b[39;49;00m", '\x1b[91mWARNING: invalid value set (missing closing brace): {1, 2\x1b[39;49;00m'])

tests/test_ext_napoleon_docstring.py:2240: AssertionError
--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/root
# outdir: /tmp/pytest-of-root/pytest-0/root/_build/html
# status: 
[01mRunning Sphinx v3.2.0[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m
[91mWARNING: invalid value set (missing closing brace): {1, 2[39;49;00m

=============================== warnings summary ===============================
sphinx/util/docutils.py:45
  /testbed/sphinx/util/docutils.py:45: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    __version_info__ = tuple(LooseVersion(docutils.__version__).version)

sphinx/registry.py:22
  /testbed/sphinx/registry.py:22: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
    from pkg_resources import iter_entry_points

../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3142
../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3142
../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3142
../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3142
  /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3142: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('sphinxcontrib')`.
  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
    declare_namespace(pkg)

sphinx/directives/patches.py:15
  /testbed/sphinx/directives/patches.py:15: DeprecationWarning: The `docutils.parsers.rst.directive.html` module will be removed in Docutils 2.0. Since Docutils 0.18, the "Meta" node is defined in `docutils.parsers.rst.directives.misc`.
    from docutils.parsers.rst.directives import images, html, tables

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
==================================== PASSES ====================================
============================= slowest 25 durations =============================
0.31s setup    tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_token_type_invalid

(24 durations < 0.005s hidden.  Use -vv to show these durations.)
=========================== short test summary info ============================
PASSED tests/test_ext_napoleon_docstring.py::NamedtupleSubclassTest::test_attributes_docstring
PASSED tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member
PASSED tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline
PASSED tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_no_type
PASSED tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_ref_in_type
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_attributes_with_class_reference
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_code_block_in_returns_section
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_colon_in_return_type
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_custom_generic_sections
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_docstrings
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_keywords_with_types
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_kwargs_in_arguments
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_list_in_parameter_description
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_noindex
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_parameters_with_class_reference
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_raises_types
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_section_header_formatting
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_sphinx_admonitions
PASSED tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_xrefs_in_return_type
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_colon_in_return_type
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_convert_numpy_type_spec
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_docstrings
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_list_in_parameter_description
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameter_types
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_with_class_reference
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_without_class_reference
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_raises_types
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens_invalid
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_section_header_underline_length
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_see_also_refs
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_sphinx_admonitions
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_token_type
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_tokenize_type_spec
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute_strip_signature_backslash
PASSED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_xrefs_in_return_type
PASSED tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[x, y, z-x, y, z]
PASSED tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*args, **kwargs-\\*args, \\*\\*kwargs]
PASSED tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*x, **y-\\*x, \\*\\*y]
FAILED tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_multiple_parameters
FAILED tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_token_type_invalid
=================== 2 failed, 40 passed, 7 warnings in 0.47s ===================
py39: exit 1 (0.98 seconds) /testbed> pytest -rA --durations 25 tests/test_ext_napoleon_docstring.py pid=104
  py39: FAIL code 1 (0.99=setup[0.01]+cmd[0.98] seconds)
  evaluation failed :( (1.08 seconds)
+ git checkout e188d56ed1248dead58f3f8018c0e9a3f99193f7 tests/test_ext_napoleon_docstring.py
Updated 1 path from 83fce7094
